<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>üì± Remote SMS Dashboard</title>
  <style>
    body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: #1a1a2e; color: #e0e0e0; padding: 20px; line-height: 1.6; }
    .container { max-width: 900px; margin: 20px auto; background-color: #2a2a4a; padding: 30px; border-radius: 10px; box-shadow: 0 5px 15px rgba(0,0,0,0.5); }
    h1 { color: #00ffc8; text-align: center; margin-bottom: 25px; border-bottom: 2px solid #00ffc8; padding-bottom: 15px; }
    p { text-align: center; color: #ccc; margin-bottom: 30px; }
    .action-buttons { text-align: center; margin-bottom: 30px; }
    .action-buttons button {
      background-color: #007bff;
      color: white;
      padding: 12px 25px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1em;
      transition: background-color 0.3s ease;
      margin: 0 10px;
    }
    .action-buttons button:hover {
      background-color: #0056b3;
    }
    table { width: 100%; border-collapse: collapse; margin-top: 20px; background-color: #333355; border-radius: 8px; overflow: hidden; }
    th, td { border: 1px solid #444477; padding: 12px; text-align: left; }
    th { background-color: #3f3f6f; color: #aaffea; }
    tr:nth-child(even) { background-color: #2f2f5f; }
    tr:hover { background-color: #4a4a7a; }
    .no-sms { text-align: center; padding: 20px; color: #aaa; font-style: italic; }
  </style>
</head>
<body>
  <div class="container">
    <h1>üì≤ SMS Viewer (Remote)</h1>
    <p>Below is your latest synced SMS data from phone üì§</p>

    <div class="action-buttons">
      <button onclick="fetchSMS()">Refresh SMS</button>
      <button onclick="downloadSMS()">Download All SMS (JSON)</button>
    </div>

    <table id="smsTable">
      <thead>
        <tr>
          <th>üì® From</th>
          <th>üí¨ Message</th>
          <th>‚è∞ Date</th>
          <th>Type</th>
        </tr>
      </thead>
      <tbody>
        <% if (sms_messages && sms_messages.length > 0) { %>
            <% sms_messages.forEach(function(sms) { %>
                <tr>
                    <td><%= sms.sender %></td>
                    <td><%= sms.message.replace(/\n/g, '<br>') %></td>
                    <td><%= sms.formattedDate %></td>
                    <td><%= sms.type %></td>
                </tr>
            <% }); %>
        <% } else { %>
            <tr>
                <td colspan="4" class="no-sms">No SMS data found. Send an SMS from your registered phone.</td>
            </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <script>
    // Function to download SMS data as a JSON file
    async function downloadSMS() {
      try {
        const res = await fetch("/api/sms"); // Get all SMS from the server
        if (!res.ok) {
          alert("Failed to fetch SMS for download.");
          return;
        }
        const smsData = await res.json();

        // Create a Blob from the JSON data
        const blob = new Blob([JSON.stringify(smsData, null, 2)], { type: "application/json" });
        const url = URL.createObjectURL(blob);

        // Create a temporary link element to trigger download
        const a = document.createElement("a");
        a.href = url;
        a.download = `sms_backup_${new Date().toISOString().slice(0,10)}.json`; // Dynamic filename
        document.body.appendChild(a);
        a.click(); // Programmatically click the link
        document.body.removeChild(a); // Clean up
        URL.revokeObjectURL(url); // Release the object URL
      } catch (error) {
        console.error("Error during SMS download:", error);
        alert("An error occurred during download.");
      }
    }

    // Function to refresh SMS data on the table (fetches from memory on server)
    async function fetchSMS() {
        // Since we are passing sms_messages directly via EJS,
        // this function primarily serves as a placeholder or for dynamic refresh
        // if we were fetching via API after initial load.
        // For this current setup, a page refresh handles it.
        // If you want dynamic refresh without full page reload, you'd need
        // to re-fetch from /api/sms and update the table tbody here.
        window.location.reload(); // Simple refresh for now.
    }
  </script>
</body>
</html>
